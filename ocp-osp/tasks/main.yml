---
# tasks file for jritenour.ocp-osp
#  - name: Generate  UUID
#    shell: openssl rand -hex 2
#    register: uuid_list
#  - name: Debugging instance info
#    debug:
#      var: uuid_list.stdout

  - name: Create volume for /var for all instances
    os_volume:
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
      state: present
      availability_zone: "{{ az }}"
      size: "{{ db_size }}"
      display_name: "{{ db_vol_name }}-{{ item }}"
    with_sequence:
      count={{ num }}

  - name: launch instances
    os_server:
      auth:
        auth_url: "{{ osp_url }}"
        username: "{{ osp_user }}"
        password: "{{ osp_pass }}"
        project_name: "{{ osp_project }}"
      name: "{{ vm_name }}-{{ uuid_list.stdout }}"
      state: present
      key_name: "{{ key_name }}"
      availability_zone: "{{ az }}"
      nics:
        - net-name: "{{ network_name }}"
      image: "{{ image_uid }}"
      flavor: "{{ flavor_name }}"
      security_groups: "{{ security_group }}"
      auto_ip: yes
      volumes:
        - "{{ db_vol_name }}-{{ num }}"
    register: osp_host


#  - name: wait for instances become ready to use
#    wait_for:
#     host: "{{ osp_host.openstack.public_v4 }}"
#     port: "22"
#     timeout: "320"
#     state: "started"

  - name: add master server to inventory
    add_host:
      hostname: "{{ item.accessIPv4 }}"
      ansible_ssh_user: cloud-user
      groupname: master
    with_items: "{{ openstack_servers }}"
    when: master

  - name: add Worker to inventory
    add_host:
      hostname: "{{ item.accessIPv4 }}"
      ansible_ssh_user: cloud-user
      groupname: node
    with_items: "{{ openstack_servers }}"
    when: node
